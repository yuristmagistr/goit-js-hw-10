{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// // Описаний в документації\n// import flatpickr from \"flatpickr\";\n// // Додатковий імпорт стилів\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n// // Описаний у документації\n// import iziToast from \"izitoast\";\n// // Додатковий імпорт стилів\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n\n// const startBtn = document.querySelector('[data-start]');\n// const inputTimer = document.querySelector('#datetime-picker');\n// const daysData = document.querySelector('[data-days]');\n// const hoursData = document.querySelector('[data-hours]');\n// const minutesData = document.querySelector('[data-minutes]');\n// const secondsData = document.querySelector('[data-seconds]');\n// const timer = document.querySelector('.timer');\n\n// startBtn.disabled = true; // date unchoosed\n\n// let userSelectedDate;\n\n// const options = {\n//     enableTime: true,\n//     time_24hr: true,\n//     defaultDate: new Date(),\n//     minuteIncrement: 1,\n//     onClose(selectedDates) {\n//         userSelectedDate = selectedDates[0];\n//         if (userSelectedDate < Date.now()) {\n//             iziToast.error({\n//                 message: 'Please choose a date in the future',\n//                 position: 'topRight',\n//             });\n//             startBtn.disabled = true;\n//         } else {\n//             startBtn.disabled = false;\n//         }\n//     },\n// }\n\n// let countDownInterval;\n\n// function startTimer() {\n//         countDownInterval = setInterval(updateTimer, 1000, userSelectedDate);\n//     }\n       \n// function updateTimer(endDate) {\n//     const initial = Date.now();\n//     const diff = endDate - initial;\n//     const { days, hours, minutes, seconds } = convertMs(diff);\n    \n//     if (!isNaN(days) && !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds)) {\n//         daysData.textContent = addLeadingZero(days);\n//         hoursData.textContent = addLeadingZero(hours);\n//         minutesData.textContent = addLeadingZero(minutes);\n//         secondsData.textContent = addLeadingZero(seconds);\n//     }\n//    if (diff <= 0) {\n//     stopTimer();\n// }   \n// } \n\n\n// function stopTimer() {\n//     if (countDownInterval) {\n//         clearInterval(countDownInterval)\n\n//         daysData.textContent = '00';\n//         hoursData.textContent = '00';\n//         minutesData.textContent = '00';\n//         secondsData.textContent = '00';\n\n//         countDownInterval = null;\n//     }\n// }\n\n\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = Math.floor(ms / day);\n//   // Remaining hours\n//   const hours = Math.floor((ms % day) / hour);\n//   // Remaining minutes\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   // Remaining seconds\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\n\n// startBtn.addEventListener('click', () => {\n//     startTimer();\n// });\n\n// function addLeadingZero(value) {\n//     return String(value).padStart(2, '0');\n// }\n\n// const fp = flatpickr(inputTimer, options);\n\n\n//==============\n\n\n// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst startBtn = document.querySelector('[data-start]');\nconst inputTimer = document.querySelector('#datetime-picker');\nconst daysData = document.querySelector('[data-days]');\nconst hoursData = document.querySelector('[data-hours]');\nconst minutesData = document.querySelector('[data-minutes]');\nconst secondsData = document.querySelector('[data-seconds]');\nconst timer = document.querySelector('.timer');\n\nstartBtn.disabled = true; // date unchoosed\n\nfunction handleStartButtonClick() {\n    startTimer();\n}\n\n\n\nlet userSelectedDate;\n\n\nfunction initializeFlatpickr() {\n    const options = {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        onClose: handleDateSelection,\n    };\n\n    return flatpickr(inputTimer, options);\n}\n\nfunction handleDateSelection(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n        iziToast.error({\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n        });\n        startBtn.disabled = true;\n    } else {\n        startBtn.disabled = false;\n    }\n}\n\nlet countDownInterval;\n\nfunction startTimer() {\n    countDownInterval = setInterval(updateTimer, 1000, userSelectedDate);\n    startBtn.disabled = true;\n    }\n\n       \nfunction updateTimer(endDate) {\n    const initial = Date.now();\n    const diff = endDate - initial;\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    \n    if (!isNaN(days) && !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds)) {\n        daysData.textContent = addLeadingZero(days);\n        hoursData.textContent = addLeadingZero(hours);\n        minutesData.textContent = addLeadingZero(minutes);\n        secondsData.textContent = addLeadingZero(seconds);\n    }\n   if (diff <= 0) {\n    stopTimer();\n}   \n} \n\n\nfunction stopTimer() {\n    if (countDownInterval) {\n        clearInterval(countDownInterval)\n\n        daysData.textContent = '00';\n        hoursData.textContent = '00';\n        minutesData.textContent = '00';\n        secondsData.textContent = '00';\n\n        countDownInterval = null;\n    }\n}\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n\nstartBtn.addEventListener('click', handleStartButtonClick);\n\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nconst fp = initializeFlatpickr();\n\n"],"names":["startBtn","inputTimer","daysData","hoursData","minutesData","secondsData","handleStartButtonClick","startTimer","userSelectedDate","initializeFlatpickr","flatpickr","handleDateSelection","selectedDates","iziToast","countDownInterval","updateTimer","endDate","initial","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","stopTimer","ms","value"],"mappings":"2GAkIA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC7C,SAAS,cAAc,QAAQ,EAE7CL,EAAS,SAAW,GAEpB,SAASM,GAAyB,CAC9BC,GACJ,CAIA,IAAIC,EAGJ,SAASC,GAAsB,CAS3B,OAAOC,EAAUT,EARD,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASU,CACjB,CAEwC,CACxC,CAEA,SAASA,EAAoBC,EAAe,CACxCJ,EAAmBI,EAAc,CAAC,EAC9BJ,EAAmB,KAAK,OACxBK,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,UACtB,CAAS,EACDb,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAE5B,CAEA,IAAIc,EAEJ,SAASP,GAAa,CAClBO,EAAoB,YAAYC,EAAa,IAAMP,CAAgB,EACnER,EAAS,SAAW,EACnB,CAGL,SAASe,EAAYC,EAAS,CAC1B,MAAMC,EAAU,KAAK,MACfC,EAAOF,EAAUC,EACjB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAEpD,CAAC,MAAMC,CAAI,GAAK,CAAC,MAAMC,CAAK,GAAK,CAAC,MAAMC,CAAO,GAAK,CAAC,MAAMC,CAAO,IAClEpB,EAAS,YAAcsB,EAAeL,CAAI,EAC1ChB,EAAU,YAAcqB,EAAeJ,CAAK,EAC5ChB,EAAY,YAAcoB,EAAeH,CAAO,EAChDhB,EAAY,YAAcmB,EAAeF,CAAO,GAEjDJ,GAAQ,GACXO,GAEJ,CAGA,SAASA,GAAY,CACbX,IACA,cAAcA,CAAiB,EAE/BZ,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAE1BS,EAAoB,KAE5B,CAIA,SAASS,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAOAtB,EAAS,iBAAiB,QAASM,CAAsB,EAGzD,SAASkB,EAAeG,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEWlB,EAAmB"}